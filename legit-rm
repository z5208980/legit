#!/bin/dash

cached="0";
forced="0";
for i in "$@"
do
    [ "$i" =  "--cached" ] && cached="1";
    [ "$i" = "--force" ] && forced="1";
done

if [ "$#" -eq 0 ]; then
    echo "usage: legit-rm [--force] [--cached] <filenames>"
    exit 1;
fi

index='.legit/index';
commit_num="0";                      # Get latest repo #
msg_file='.legit/COMMIT_EDITMSG';
[ -s $msg_file ] && commit_num=`cut -d' ' -f1 $msg_file`;

repo='.legit/logs/repo';
snapshot="$repo/.snapshot.$commit_num";

if [ $cached -eq "1" ] && [ $forced -eq "1" ]; then
    # echo "--both";
    for i in "$@"
    do
        # echo "$i";
        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        elif [ -f "$index/$i" ]; then
            # echo "deleting: $i | from: $index/$i";
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        # FOR LINUX
        # sed -i "/$i\$/d" "$index/.index"; # delete from status
        
        if [ ! "`grep -o "^$i\$" "$index/.status"`" ]; then
            echo "$i" >> "$index/.status";  # useful for deleted files
        fi
        # cat "$index/.status";

        # FOR MAC
        # sed -i -e "/$i\$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";
    done
elif [ $cached -eq "1" ]; then
    # echo "HERE";
    for i in "$@"
    do
        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        fi

        main_sha="0";
        [ -f "$i" ] && main_sha=`shasum $i | cut -d' ' -f1`;

        index_sha="0";
        [ -f "$index/$i" ] && index_sha=`shasum "$index/$i" | cut -d' ' -f1`;

        snap_sha="`grep "$i$" "$snapshot/.index" | cut -d' ' -f1`";
        [ ! -n "$snap_sha" ] && snap_sha="0";

        if [ "$main_sha" != "$index_sha" ] && [ "$index_sha" != "$snap_sha" ] && [ "$snap_sha" != "0" ]; then
            echo "legit-rm: error: '$i' in index is different to both working file and repository";
            exit 1;
        elif [ "$snap_sha" = 0 ] && [ "$index_sha" = 0 ]; then
            echo "legit-rm: error: '$i' is not in the legit repository";
            exit 1;
        fi
        # exit 1;

        if [ -f "$index/$i" ]; then
            # echo "deleting: $i | from: $index/$i";
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        # FOR LINUX
        sed -i "/$i\$/d" "$index/.index"; # delete from status

        # FOR MAC
        # sed -i -e "/$i\$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";

    done
elif [ $forced -eq "1" ]; then
    for i in "$@"
    do
        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        fi

        main_sha="0";
        [ -f "$i" ] && main_sha=`shasum $i | cut -d' ' -f1`;

        index_sha="0";
        [ -f "$index/$i" ] && index_sha=`shasum "$index/$i" | cut -d' ' -f1`;

        snap_sha="`grep "$i$" "$snapshot/.index" | cut -d' ' -f1`";
        [ -z "$snap_sha" ] && snap_sha="0";

        # echo "main: $main_sha"; echo "index: $index_sha"; echo "repo: $snap_sha";
        
        if [ ! -f "$index/$i" ]; then
            echo "legit-rm: error: '$i' is not in the legit repository";
            exit 1;
        fi
        
        # exit 1;
        
        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        elif [ -f "$index/$i" ]; then
            # echo "deleting: $i | from: $index/$i";
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        if [ -f "$i" ]; then
            rm "$i";    # delete from HEAD
        fi

        ####  update .status  ####
        if [ ! "`grep -o "^$i\$" "$index/.status"`" ]; then
            echo "$i" >> "$index/.status";  # useful for deleted files
        fi
        # cat "$index/.status";
        # cat "$index/.index";
        # echo "$i";
        # FOR LINUX
        # sed -i "/\/$i\$/d" "$index/.index"; # delete from .index

        # FOR MAC
        # sed -i -e "/\/$i\$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";
    done
else
    # echo "This deletes from main and index --> makes it deleted";
    for i in "$@"
    do
        main_sha="0";
        [ -f "$i" ] && main_sha=`shasum $i | cut -d' ' -f1`;

        index_sha="0";
        [ -f "$index/$i" ] && index_sha=`shasum "$index/$i" | cut -d' ' -f1`;

        snap_sha="`grep "$i$" "$snapshot/.index" | cut -d' ' -f1`";
        [ -z "$snap_sha" ] && snap_sha="0";

        if [ "$main_sha" != "$index_sha" ] && [ "$index_sha" != "$snap_sha" ] && [ "$snap_sha" != "0" ]; then
            echo "legit-rm: error: '$i' in index is different to both working file and repository";
            exit 1;
        elif [ "$main_sha" != "$index_sha" ] && [ "$index_sha" != "0" ]; then
            echo "legit-rm: error: '$i' in repository is different to working file";
            exit 1;
        elif [ "$main_sha" = "$index_sha" ] && [ "$index_sha" != "$snap_sha" ]; then
            echo "legit-rm: error: '$i' has changes staged in the index";
            exit 1;
        elif [ -z $snap_sha ] && [ -z $index_sha ]; then
            echo "legit-rm: error: '$i' is not in the legit repository";
            exit 1;
        fi

        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        fi

        if [ -f "$index/$i" ]; then     # delete from index
            # echo "deleting: $index/$i | from: $index/$i";
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
            exit 1;
        fi
        
        ####  update .status  ####
        if [ ! "`grep -o "^$i\$" "$index/.status"`" ]; then
            echo "$i" >> "$index/.status";  # useful for deleted files
        fi
        # cat "$index/.status";

        # cat "$index/.index";
        # sed -i "/$i\$/d" "$index/.index"; # delete from .index

        # sed -i -e "/$i$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";
        # ff583f99fcc0d5193258f78ea3531d50c0e5d71b  .legit/logs/repo/.snapshot.2/a

        # echo "deleting: $i | from: $i";
        rm "$i";    # delete from HEAD

    done
fi


