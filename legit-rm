#!/bin/dash

if [ ! -d '.legit' ]; then
    echo "legit-rm: error: no .legit directory containing legit repository exists";
    exit 1;
fi

if [ ! -d '.legit/logs/repo/.snapshot.0' ]; then
    echo "legit-rm: error: your repository doesn't have any commits yet";
    exit 1;
fi

cached="0";
forced="0";
for i in "$@"
do
    [ "$i" =  "--cached" ] && cached="1";
    [ "$i" = "--force" ] && forced="1";
done

if [ "$#" -eq 0 ]; then
    echo "usage: legit-rm [--force] [--cached] <filenames>"
    exit 1;
fi
if [ "$#" -gt 1 ]; then
    if echo "$1" | egrep -q "^--"; then
        if [ "$cached" = "0" ] && [ "$forced" = "0" ]; then
            echo "usage: legit-rm [--force] [--cached] <filenames>"
            exit 1;
        fi
    fi
fi

index='.legit/index';
commit_num="0";                      # Get latest repo #
msg_file='.legit/COMMIT_EDITMSG';
[ -s $msg_file ] && commit_num=`cut -d' ' -f1 $msg_file`;

repo='.legit/logs/repo';
snapshot="$repo/.snapshot.$commit_num";

if [ $cached -eq "1" ] && [ $forced -eq "1" ]; then
    for i in "$@"
    do
        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        elif [ -f "$index/$i" ]; then
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        # FOR LINUX
        # sed -i "/$i\$/d" "$index/.index"; # delete from status

        # FOR MAC
        # sed -i -e "/$i\$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";

        if [ ! "`grep -o "^$i\$" "$index/.status"`" ]; then
            echo "$i" >> "$index/.status";
        fi
    done
elif [ $cached -eq "1" ]; then
    for i in "$@"
    do
        [ "$i" = "--cached" ] || [ "$i" = "--force" ] && continue;

        main_sha="0";
        [ -f "$i" ] && main_sha=`sha1sum $i | cut -d' ' -f1`;

        index_sha="0";
        [ -f "$index/$i" ] && index_sha=`sha1sum "$index/$i" | cut -d' ' -f1`;

        snap_sha="`grep "$i$" "$snapshot/.index" | cut -d' ' -f1`";
        [ ! -n "$snap_sha" ] && snap_sha="0";

        if [ "$main_sha" != "$index_sha" ] && [ "$index_sha" != "$snap_sha" ] && [ "$snap_sha" != "0" ]; then
            echo "legit-rm: error: '$i' in index is different to both working file and repository";
            exit 1;
        elif [ "$snap_sha" = 0 ] && [ "$index_sha" = 0 ]; then
            echo "legit-rm: error: '$i' is not in the legit repository";
            exit 1;
        fi

        if [ -f "$index/$i" ]; then
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        # FOR LINUX
        sed -i "/$i\$/d" "$index/.index"; # delete from status

        # FOR MAC
        # sed -i -e "/$i\$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";
    done
elif [ $forced -eq "1" ]; then
    for i in "$@"
    do
        [ "$i" = "--cached" ] || [ "$i" = "--force" ] && continue;

        main_sha="0";
        [ -f "$i" ] && main_sha=`sha1sum $i | cut -d' ' -f1`;

        index_sha="0";
        [ -f "$index/$i" ] && index_sha=`sha1sum "$index/$i" | cut -d' ' -f1`;

        snap_sha="`grep "$i$" "$snapshot/.index" | cut -d' ' -f1`";
        [ -z "$snap_sha" ] && snap_sha="0";

        if [ ! -f "$index/$i" ]; then
            echo "legit-rm: error: '$i' is not in the legit repository";
            exit 1;
        fi

        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        elif [ -f "$index/$i" ]; then
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        [ -f "$i" ] && rm "$i";     # delete from HEAD

        if [ ! "`grep -o "^$i\$" "$index/.status"`" ]; then
            echo "$i" >> "$index/.status";  # useful for deleted files
        fi

        # FOR LINUX
        # sed -i "/\/$i\$/d" "$index/.index"; # delete from .index

        # FOR MAC
        # sed -i -e "/\/$i\$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";
    done
else
    for i in "$@"
    do
        main_sha="0";
        [ -f "$i" ] && main_sha=`sha1sum $i | cut -d' ' -f1`;

        index_sha="0";
        [ -f "$index/$i" ] && index_sha=`sha1sum "$index/$i" | cut -d' ' -f1`;

        snap_sha="`grep "$i$" "$snapshot/.index" | cut -d' ' -f1`";
        [ -z "$snap_sha" ] && snap_sha="0";

        if [ "$main_sha" != "$index_sha" ] && [ "$index_sha" != "$snap_sha" ] && [ "$snap_sha" != "0" ]; then
            echo "legit-rm: error: '$i' in index is different to both working file and repository";
            exit 1;
        elif [ "$main_sha" != "$index_sha" ] && [ "$index_sha" != "0" ]; then
            echo "legit-rm: error: '$i' in repository is different to working file";
            exit 1;
        elif [ "$main_sha" = "$index_sha" ] && [ "$index_sha" != "$snap_sha" ]; then
            echo "legit-rm: error: '$i' has changes staged in the index";
            exit 1;
        elif [ -z $snap_sha ] && [ -z $index_sha ]; then
            echo "legit-rm: error: '$i' is not in the legit repository";
            exit 1;
        fi

        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        fi

        if [ -f "$index/$i" ]; then     # delete from index
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
            exit 1;
        fi

        if [ ! "`grep -o "^$i\$" "$index/.status"`" ]; then
            echo "$i" >> "$index/.status";  # useful for deleted files
        fi

        # sed -i "/$i\$/d" "$index/.index"; # delete from .index

        # sed -i -e "/$i$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";

        rm "$i";    # delete from HEAD
    done
fi
