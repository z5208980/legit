#!/bin/dash

cached="0";
forced="0";
for i in "$@"
do
    # echo "$i";
    if [ "$i" =  "--cached" ]; then
        # echo "-a";
        cached="1";
    elif [ "$i" = "--force" ]; then
        # echo "-m";
        forced="1";
    #     #file

    fi
done
# echo "$cached"; echo "$forced";

if [ "$#" -eq 0 ]; then
    echo "usage: legit-rm [--force] [--cached] <filenames>"
    exit 0;
fi
#if [ "$cached" -eq 0 ] && [ "$forced" -eq 0 ]; then
#    echo "usage: legit-rm [--force] [--cached] <filenames>"
#    exit 0;
#fi

#echo "index";
#for i in `ls $index`
#do
#    echo "$i";
#done

index='.legit/index';
if [ $cached -eq "1" ] && [ $forced -eq "1" ]; then
    echo "--both";
    for i in "$@"
    do
        # echo "$i";
        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        elif [ -f "$index/$i" ]; then
            # echo "deleting: $i | from: $index/$i";
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        # FOR LINUX
        # sed -i "/$i\$/d" "$index/.index"; # delete from status

        # FOR MAC
        sed -i -e "/$i\$/d" "$index/.index"; # delete from status
        rm "$index/.index-e";
    done
elif [ $cached -eq "1" ]; then
    # echo "This only deletes from index";
    for i in "$@"
    do
        # echo "$i";
        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        elif [ -f "$index/$i" ]; then
            # echo "deleting: $i | from: $index/$i";
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        # cat "$index/.index";
        # echo "$i";
        # FOR LINUX
        sed -i "/$i\$/d" "$index/.index"; # delete from status

        # FOR MAC
        # sed -i -e "/$i\$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";

    done
elif [ $forced -eq "1" ]; then
    # echo "This deletes from main, index, and the status --> makes it untracked";



    # echo "main: $main_sha";
    # echo "index: $index_sha";
    for i in "$@"
    do
        main_sha="0";
        if [ -f "$i" ]; then
        main_sha=`shasum $i | cut -d' ' -f1`;
        fi

        index_sha="0";
        if [ -f "$index/$i" ]; then
        index_sha=`shasum "$index/$i" | cut -d' ' -f1`;
        fi
        echo "main: $main_sha";
        echo "index: $index_sha";
    
        # echo "$i";
        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        elif [ -f "$index/$i" ]; then
            # echo "deleting: $i | from: $index/$i";
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        if [ -f "$i" ]; then
            rm "$i";    # delete from HEAD
        fi

        # cat "$index/.index";
        # echo "$i";
        # FOR LINUX
        sed -i "/\/$i\$/d" "$index/.index"; # delete from .index

        # FOR MAC
        # sed -i -e "/\/$i\$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";
    done
else
    # echo "This deletes from main and index --> makes it deleted";
    for i in "$@"
    do
        # echo "$i";
        if [ "$i" = "--cached" ] || [ "$i" = "--force" ] ; then
            continue;
        fi

        if [ -f "$index/$i" ]; then     # delete from index
            # echo "deleting: $i | from: $index/$i";
            rm "$index/$i";
        else
            echo "legit-rm: error: '$i' is not in the legit repository";
        fi

        # cat "$index/.index";
        sed -i "/$i\$/d" "$index/.index"; # delete from .index

        # sed -i -e "/$i$/d" "$index/.index"; # delete from status
        # rm "$index/.index-e";

        rm "$i";    # delete from HEAD

    done
fi

# $ echo 4 >>a
# $ echo 5 >>b
# $ echo 6 >>c
# $ echo 7 >d
# $ echo 8 >e
# $ legit-add b c d e
# $ echo 9 >b
# $ echo 0 >d
# $ legit-rm --cached a c
# $ legit-rm --force --cached b
# $ legit-rm --force --cached e
# $ legit-rm --force d
# $ legit-status
# a - untracked
# b - untracked
# c - untracked
# e - untracked

# $ legit-init
# Initialized empty legit repository in .legit
# $ touch a b
# $ legit-add a b
# $ legit-commit -m "first commit"
# Committed as commit 0
# $ rm a
# $ legit-commit -m "second commit"
# nothing to commit
# $ legit-add a
# $ legit-commit -m "second commit"
# Committed as commit 1
# $ legit-rm --cached b
# $ legit-commit -m "second commit"
# Committed as commit 2
# $ legit-rm b
# legit-rm: error: 'b' is not in the legit repository
# $ legit-add b
# $ legit-rm b
# legit-rm: error: 'b' has changes staged in the index
# $ legit-commit -m "third commit"
# Committed as commit 3
# $ legit-rm b
# $ legit-commit -m "fourth commit"
# Committed as commit 4

$ legit-init
Initialized empty legit repository in .legit
$ echo 1 >a
$ echo 2 >b
$ echo 3 >c
$ legit-add a b c
$ legit-commit -m "first commit"
Committed as commit 0
$ echo 4 >>a
$ echo 5 >>b
$ echo 6 >>c
$ echo 7 >d
$ echo 8 >e
$ legit-add b c d
$ echo 9 >b
$ legit-rm a
legit-rm: error: 'a' in repository is different to working file
$ legit-rm b
legit-rm: error: 'b' in index is different to both working file and repository
$ legit-rm c
legit-rm: error: 'c' has changes staged in the index
$ legit-rm d
legit-rm: error: 'd' has changes staged in the index
$ legit-rm e
legit-rm: error: 'e' is not in the legit repository
$ legit-rm --cached a
$ legit-rm --cached b
legit-rm: error: 'b' in index is different to both working file and repository
$ legit-rm --cached c
$ legit-rm --cached d
$ legit-rm --cached e
legit-rm: error: 'e' is not in the legit repository
$ legit-rm --force a
legit-rm: error: 'a' is not in the legit repository
$ legit-rm --force b
$ legit-rm --force c
legit-rm: error: 'c' is not in the legit repository
$ legit-rm --force d
legit-rm: error: 'd' is not in the legit repository
$ legit-rm --force e
legit-rm: error: 'e' is not in the legit repository
