#!/bin/bash

# TODO
# catch err:
    # usage: legit-commit [-a] -m commit-message

all="0";
msg="0";
valid_msg="0";
for i in "$@"
do
    # echo "$i";
    if [ "$i" =  "-a" ]; then
        # echo "-a";
        all="1";
    elif [ "$i" = "-m" ]; then
        # echo "-m";
        msg="1";
    else    #msg
        if [ "`echo "$i" | egrep "^[^-]|^$"`" ]; then
            valid_msg="1";
        fi
    fi
done
# echo "$all"; echo "$msg"; echo "$valid_msg";

if [ $msg -eq "0" ] || [ $# -lt 2 ] || [ $valid_msg -eq "0" ]; then
    echo "usage: legit-commit [-a] -m commit-message"; exit 0;
fi

####  -a  ####
if [ $all -eq "1" ]; then
    # echo "--all";
    # NOT PROPERLY HANDLED DELETED FILES IN MAIN OR INDEX !!!!!
    # NOTE THIS COULD BE INEFFICIENT
    for i in "`sh legit-status | egrep -v "untracked|same as repo|delete" | cut -d'-' -f1`"
    do
        sh legit-add "$i";
    done
fi
# exit 0;
#############################################################################

index='.legit/index';
touch "$index/.status";
####  Stores all the file for status  ####
for i in `ls`
do
    if [ "`grep -o "^$i\$" "$index/.status"`" ]; then
        # already in .status don't add
        # echo "$i";
        continue;
    fi
    echo "$i" >> "$index/.status";  # useful for deleted files
done
# sort "$index/.status" > "$index/.status";
# exit 0;

##### whether to commit or not #####
# index='.legit/index';
if [ -f "$index/.index" ]; then
    commit_flag="0";
    for i in `ls $index`
    do
        hash="`shasum $i | cut -d' ' -f1`";

        if [ "`grep $hash "$index/.index"`" ]; then
            # echo "$hash";
            continue;
        else
            commit_flag="1";
        fi
    done
else
    commit_flag="1";
    touch "$index/.index";
fi

# echo "$commit_flag";
if [ "$commit_flag" -eq 0 ]; then
    echo "nothing to commit"; exit 0;
fi

##### COMMIT_EDITMSG #####
commit_num="0";
msg_file='.legit/COMMIT_EDITMSG';
if [ -s $msg_file ]; then            # Not Empty
     commit_num=`cut -d' ' -f1 $msg_file`;
     commit_num=`expr $commit_num + 1`
fi
echo "$commit_num $2" > $msg_file;  # number message

##### .snapshot.# #####
>"$index/.index"
repo='.legit/logs/repo';
snapshot="$repo/.snapshot.$commit_num";

mkdir $snapshot;    # .snapshot.#
touch "$snapshot/.index";

for i in `ls $index`
do
    cp "$index/$i" "$snapshot/$i";
    echo "`shasum $snapshot/$i`" >> "$index/.index";       # update hashes
    echo "`shasum $snapshot/$i`" >> "$snapshot/.index";       # update hashes
done

##### .logs/HEAD #####
log='.legit/logs/HEAD';
log_commit="commit: $commit_num $2";
echo "$log_commit" >> $log;     # commit: number message

echo "Committed as commit $commit_num";
